name: Run SPE1 demo

on:
 push:
   branches:
     - main
     - 'version-**'
 pull_request:

jobs:
  run-ert3-spe1:
    timeout-minutes: 20
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']
        data-base: [local, postgres]
        os: [ubuntu-18.04]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Flow Simulator
      run: |
        sudo apt-get update
        sudo apt-get install software-properties-common
        sudo apt-add-repository ppa:opm/ppa
        sudo apt-get update
        sudo apt-get install mpi-default-bin
        sudo apt-get install libopm-simulators-bin

    - name: Install ERT
      run: |
        export CC=gcc-10
        export CXX=g++-10
        pip install .

    - name: Setup postgres ert-storage
      if: matrix.data-base == 'postgres'
      env:
        ERT_STORAGE_DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres
      run: |
        # installing psycopg2 from ert-storage extras
        pip install psycopg2
        ert-storage alembic upgrade head

    - name: Start ert-storage
      run: |
        ert3 service start storage &
        ert3 service check storage --timeout 100

    - name: Run spe1 demo
      run: |
        ert3 init --example spe1
        pushd spe1
        ./run_demo
        popd

language: c

compiler:
  - gcc
  - clang

os:
  - linux
  - osx

osx_image: xcode8.3
sudo: false
dist: xenial

env:
  global:
    - ERT_SHOW_BACKTRACE=1
    - INSTALL_DIR="$(pwd)/install"
    - LD_LIBRARY_PATH="${INSTALL_DIR}/lib:${INSTALL_DIR}/lib64"
    - DYLD_LIBRARY_PATH="${INSTALL_DIR}/lib:${INSTALL_DIR}/lib64"

  matrix:
    - PYTHON_VERSION=2.7
    - PYTHON_VERSION=3.6

matrix:
  fast_finish: true
  exclude:
    - os: osx
      compiler: gcc
    - os: linux
      compiler: clang


addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - george-edison55-precise-backports
    packages:
      - liblapack-dev
      - valgrind
      - clang
      - cmake
      - cmake-data

before_install:
    - if [[ $PYTHON_VERSION == 2.7 ]]; then
        export TRAVIS_PYTHON_VERSION="2.7";
      else
        export TRAVIS_PYTHON_VERSION="3.6";
      fi

    # We do this conditionally because it saves us some downloading if the version is the same.
    - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
        else
          wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
        fi
      else
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
          wget https://repo.continuum.io/miniconda/Miniconda3-4.4.10-MacOSX-x86_64.sh -O miniconda.sh;
        else
          wget https://repo.continuum.io/miniconda/Miniconda3-4.4.10-Linux-x86_64.sh -O miniconda.sh;
        fi
      fi

    - bash miniconda.sh -b -p $HOME/miniconda
    - export CONDA_HOME="$HOME/miniconda"
    - export PATH="$CONDA_HOME/bin:$PATH"
    - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        conda config --set restore_free_channel true;        
        conda create -n ert_env pyqt=4.11.3 python=2.7 --yes;
      else
        conda create -n ert_env pyqt python=$TRAVIS_PYTHON_VERSION --yes;
      fi
    - source activate ert_env
    - pip install --upgrade -r requirements.txt
    # Checkout libres - need libecl version
    - source .libres_version
    - git clone --branch $LIBRES_VERSION --depth 1 https://github.com/equinor/libres
    - pushd libres
    - source .libecl_version
    - popd
    - git clone --branch $LIBECL_VERSION --depth 1 https://github.com/equinor/libecl

install:
  # For now we have to make install libecl.
  # Remove when it's possible to pip install
  - bash .build_install.sh libecl
  - bash .build_install.sh libres

script:
  - ulimit -n 2048
  - export PYTHONPATH=$INSTALL_DIR/lib/python$TRAVIS_PYTHON_VERSION/dist-packages:$PYTHONPATH
  - export PYTHONPATH=$INSTALL_DIR/lib/python$TRAVIS_PYTHON_VERSION/site-packages:$PYTHONPATH
  - export PATH=$INSTALL_DIR/bin:$PATH
  - echo $PATH
  - echo $PYTHONPATH
  - pip install . --prefix=$INSTALL_DIR
  - python setup.py test --addopts --junitxml=test-results/pytest/results.xml
  - sphinx-build -n -v -E -W ./docs/rst/manual ./tmp/ert_docs
  - conda remove pyqt -y
  - ert --help
